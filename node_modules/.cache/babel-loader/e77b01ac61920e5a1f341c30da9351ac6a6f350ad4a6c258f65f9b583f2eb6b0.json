{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunus\\\\OneDrive\\\\\\u0B21\\u0B15\\u0B4D\\u0B5F\\u0B41\\u0B2E\\u0B47\\u0B23\\u0B4D\\u0B1F\\u0B38\\u0B2E\\u0B42\\u0B39\\\\GitHub\\\\iamswavik\\\\src\\\\components\\\\AIMLDLProjects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../css/card.css\";\nimport \"../css/full-stack-projects.css\";\nimport \"../css/text-size.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: \"Generative Chatbot using Transformers\",\n  technologies: \"Python, Pytorch, TensorFlow, Hugging Face\",\n  date: \"March 2023\",\n  details: \"Built a chatbot using Transformers for the banking sector, ensuring accurate and reliable interactions. Trained on Persona dataset to offer personalized conversation.\",\n  githubLink: \"https://github.com/SwavikPatra/chatbot-persona\"\n  // images: [\n  //   \"../../img/twitter/s1.png\", \n  //   \"../../img/twitter/s2.png\",\n  //   \"../../img/twitter/s3.png\"\n  // ]\n},\n// Add more projects here...\n{\n  title: \"Video Classification using Transfer Learning\",\n  technologies: \"Python, Tensorflow, Jupyter Notebook\",\n  date: \"November 2022\",\n  details: \"Proposed a approach to classify videos using transfer learning. Proposed a deep learning architecture combining EfficientNet and BiLSTM to improve image classification accuracy while leveraging sequential information. Getting 89.90% accuracy on UCF101 dataset\",\n  githubLink: \"https://github.com/SwavikPatra/video-classification\"\n  // images: [\n  //   \"../../img/twitter/s1.png\", \n  //   \"../../img/twitter/s2.png\",\n  //   \"../../img/twitter/s3.png\"\n  // ]\n}];\nfunction AIMLDLProjects() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const openLightbox = image => {\n    setSelectedImage(image);\n  };\n  const closeLightbox = () => {\n    setSelectedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"projects-list\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"project-item card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-x-small\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Technologies Used:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 38\n          }, this), \" \", project.technologies]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-x-small\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this), \" \", project.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-x-small\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 38\n          }, this), \" \", project.details]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.githubLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"GitHub Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightbox\",\n      onClick: closeLightbox,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Full Size\",\n        className: \"lightbox-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMLDLProjects, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = AIMLDLProjects;\nexport default AIMLDLProjects;\nvar _c;\n$RefreshReg$(_c, \"AIMLDLProjects\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","projects","title","technologies","date","details","githubLink","AIMLDLProjects","_s","selectedImage","setSelectedImage","openLightbox","image","closeLightbox","className","children","map","project","index","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/kunus/OneDrive/ଡକ୍ୟୁମେଣ୍ଟସମୂହ/GitHub/iamswavik/src/components/AIMLDLProjects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/card.css\"\r\nimport \"../css/full-stack-projects.css\"\r\nimport \"../css/text-size.css\"\r\n\r\nconst projects = [\r\n  \r\n\r\n  {\r\n    title: \"Generative Chatbot using Transformers\",\r\n    technologies: \"Python, Pytorch, TensorFlow, Hugging Face\",\r\n    date: \"March 2023\",\r\n    details: \"Built a chatbot using Transformers for the banking sector, ensuring accurate and reliable interactions. Trained on Persona dataset to offer personalized conversation.\",\r\n    githubLink: \"https://github.com/SwavikPatra/chatbot-persona\",\r\n    // images: [\r\n    //   \"../../img/twitter/s1.png\", \r\n    //   \"../../img/twitter/s2.png\",\r\n    //   \"../../img/twitter/s3.png\"\r\n    // ]\r\n  },\r\n  // Add more projects here...\r\n  {\r\n    title: \"Video Classification using Transfer Learning\",\r\n    technologies: \"Python, Tensorflow, Jupyter Notebook\",\r\n    date: \"November 2022\",\r\n    details: \"Proposed a approach to classify videos using transfer learning. Proposed a deep learning architecture combining EfficientNet and BiLSTM to improve image classification accuracy while leveraging sequential information. Getting 89.90% accuracy on UCF101 dataset\",\r\n    githubLink: \"https://github.com/SwavikPatra/video-classification\",\r\n    // images: [\r\n    //   \"../../img/twitter/s1.png\", \r\n    //   \"../../img/twitter/s2.png\",\r\n    //   \"../../img/twitter/s3.png\"\r\n    // ]\r\n  },\r\n];\r\n\r\nfunction AIMLDLProjects() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const openLightbox = (image) => {\r\n    setSelectedImage(image);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      {/* <h2>Full-stack Projects</h2> */}\r\n      <ul className=\"projects-list\">\r\n        {projects.map((project, index) => (\r\n          <li key={index} className=\"project-item card\">\r\n            <h3>{project.title}</h3>\r\n            <p className=\"p-x-small\"><strong>Technologies Used:</strong> {project.technologies}</p>\r\n            <p className=\"p-x-small\"><strong>Date Created:</strong> {project.date}</p>\r\n            <p className=\"p-x-small\"><strong>Details:</strong> {project.details}</p>\r\n            <a href={project.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">GitHub Link</a>\r\n            {/* <div className=\"project-images\">\r\n              {project.images.map((image, imgIndex) => (\r\n                <img \r\n                  key={imgIndex} \r\n                  src={image} \r\n                  alt={`${project.title} Screenshot ${imgIndex + 1}`} \r\n                  className=\"project-image\" \r\n                  onClick={() => openLightbox(image)} \r\n                />\r\n              ))}\r\n            </div> */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {selectedImage && (\r\n        <div className=\"lightbox\" onClick={closeLightbox}>\r\n          <img src={selectedImage} alt=\"Full Size\" className=\"lightbox-image\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMLDLProjects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}