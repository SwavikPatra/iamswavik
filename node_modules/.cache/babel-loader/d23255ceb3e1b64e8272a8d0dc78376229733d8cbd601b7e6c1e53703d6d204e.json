{"ast":null,"code":"import React,{useState}from'react';import\"../css/card.css\";import\"../css/full-stack-projects.css\";import\"../css/text-size.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const projects=[{title:\"Generative Chatbot using Transformers\",technologies:\"Python, Pytorch, TensorFlow, Hugging Face\",date:\"March 2023\",details:\"Built a chatbot using Transformers for the banking sector, ensuring accurate and reliable interactions. Trained on Persona dataset to offer personalized conversation.\",githubLink:\"https://github.com/SwavikPatra/chatbot-persona\"// images: [\n//   \"../../img/twitter/s1.png\", \n//   \"../../img/twitter/s2.png\",\n//   \"../../img/twitter/s3.png\"\n// ]\n},// Add more projects here...\n{title:\"Video Classification using Transfer Learning\",technologies:\"Python, Tensorflow, Jupyter Notebook\",date:\"November 2022\",details:\"Proposed a approach to classify videos using transfer learning. Proposed a deep learning architecture combining EfficientNet and BiLSTM to improve image classification accuracy while leveraging sequential information. Getting 89.90% accuracy on UCF101 dataset\",githubLink:\"https://github.com/SwavikPatra/video-classification\"// images: [\n//   \"../../img/twitter/s1.png\", \n//   \"../../img/twitter/s2.png\",\n//   \"../../img/twitter/s3.png\"\n// ]\n}];function AIMLDLProjects(){const[selectedImage,setSelectedImage]=useState(null);const openLightbox=image=>{setSelectedImage(image);};const closeLightbox=()=>{setSelectedImage(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"projects-container\",children:[/*#__PURE__*/_jsx(\"ul\",{className:\"projects-list\",children:projects.map((project,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"project-item card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:project.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"p-x-small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Technologies Used:\"}),\" \",project.technologies]}),/*#__PURE__*/_jsxs(\"p\",{className:\"p-x-small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date Created:\"}),\" \",project.date]}),/*#__PURE__*/_jsxs(\"p\",{className:\"p-x-small\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Details:\"}),\" \",project.details]}),/*#__PURE__*/_jsx(\"a\",{href:project.githubLink,target:\"_blank\",rel:\"noopener noreferrer\",children:\"GitHub Link\"})]},index))}),selectedImage&&/*#__PURE__*/_jsx(\"div\",{className:\"lightbox\",onClick:closeLightbox,children:/*#__PURE__*/_jsx(\"img\",{src:selectedImage,alt:\"Full Size\",className:\"lightbox-image\"})})]});}export default AIMLDLProjects;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","projects","title","technologies","date","details","githubLink","AIMLDLProjects","selectedImage","setSelectedImage","openLightbox","image","closeLightbox","className","children","map","project","index","href","target","rel","onClick","src","alt"],"sources":["E:/resume code/iamswavik/src/components/AIMLDLProjects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"../css/card.css\"\nimport \"../css/full-stack-projects.css\"\nimport \"../css/text-size.css\"\n\nconst projects = [\n  \n\n  {\n    title: \"Generative Chatbot using Transformers\",\n    technologies: \"Python, Pytorch, TensorFlow, Hugging Face\",\n    date: \"March 2023\",\n    details: \"Built a chatbot using Transformers for the banking sector, ensuring accurate and reliable interactions. Trained on Persona dataset to offer personalized conversation.\",\n    githubLink: \"https://github.com/SwavikPatra/chatbot-persona\",\n    // images: [\n    //   \"../../img/twitter/s1.png\", \n    //   \"../../img/twitter/s2.png\",\n    //   \"../../img/twitter/s3.png\"\n    // ]\n  },\n  // Add more projects here...\n  {\n    title: \"Video Classification using Transfer Learning\",\n    technologies: \"Python, Tensorflow, Jupyter Notebook\",\n    date: \"November 2022\",\n    details: \"Proposed a approach to classify videos using transfer learning. Proposed a deep learning architecture combining EfficientNet and BiLSTM to improve image classification accuracy while leveraging sequential information. Getting 89.90% accuracy on UCF101 dataset\",\n    githubLink: \"https://github.com/SwavikPatra/video-classification\",\n    // images: [\n    //   \"../../img/twitter/s1.png\", \n    //   \"../../img/twitter/s2.png\",\n    //   \"../../img/twitter/s3.png\"\n    // ]\n  },\n];\n\nfunction AIMLDLProjects() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const openLightbox = (image) => {\n    setSelectedImage(image);\n  };\n\n  const closeLightbox = () => {\n    setSelectedImage(null);\n  };\n\n  return (\n    <div className=\"projects-container\">\n      {/* <h2>Full-stack Projects</h2> */}\n      <ul className=\"projects-list\">\n        {projects.map((project, index) => (\n          <li key={index} className=\"project-item card\">\n            <h3>{project.title}</h3>\n            <p className=\"p-x-small\"><strong>Technologies Used:</strong> {project.technologies}</p>\n            <p className=\"p-x-small\"><strong>Date Created:</strong> {project.date}</p>\n            <p className=\"p-x-small\"><strong>Details:</strong> {project.details}</p>\n            <a href={project.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">GitHub Link</a>\n            {/* <div className=\"project-images\">\n              {project.images.map((image, imgIndex) => (\n                <img \n                  key={imgIndex} \n                  src={image} \n                  alt={`${project.title} Screenshot ${imgIndex + 1}`} \n                  className=\"project-image\" \n                  onClick={() => openLightbox(image)} \n                />\n              ))}\n            </div> */}\n          </li>\n        ))}\n      </ul>\n\n      {selectedImage && (\n        <div className=\"lightbox\" onClick={closeLightbox}>\n          <img src={selectedImage} alt=\"Full Size\" className=\"lightbox-image\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AIMLDLProjects;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,iBAAiB,CACxB,MAAO,gCAAgC,CACvC,MAAO,sBAAsB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,QAAQ,CAAG,CAGf,CACEC,KAAK,CAAE,uCAAuC,CAC9CC,YAAY,CAAE,2CAA2C,CACzDC,IAAI,CAAE,YAAY,CAClBC,OAAO,CAAE,wKAAwK,CACjLC,UAAU,CAAE,gDACZ;AACA;AACA;AACA;AACA;AACF,CAAC,CACD;AACA,CACEJ,KAAK,CAAE,8CAA8C,CACrDC,YAAY,CAAE,sCAAsC,CACpDC,IAAI,CAAE,eAAe,CACrBC,OAAO,CAAE,qQAAqQ,CAC9QC,UAAU,CAAE,qDACZ;AACA;AACA;AACA;AACA;AACF,CAAC,CACF,CAED,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAExD,KAAM,CAAAc,YAAY,CAAIC,KAAK,EAAK,CAC9BF,gBAAgB,CAACE,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1BH,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,mBACET,KAAA,QAAKa,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAEjChB,IAAA,OAAIe,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC1Bb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC3BjB,KAAA,OAAgBa,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC3ChB,IAAA,OAAAgB,QAAA,CAAKE,OAAO,CAACd,KAAK,CAAK,CAAC,cACxBF,KAAA,MAAGa,SAAS,CAAC,WAAW,CAAAC,QAAA,eAAChB,IAAA,WAAAgB,QAAA,CAAQ,oBAAkB,CAAQ,CAAC,IAAC,CAACE,OAAO,CAACb,YAAY,EAAI,CAAC,cACvFH,KAAA,MAAGa,SAAS,CAAC,WAAW,CAAAC,QAAA,eAAChB,IAAA,WAAAgB,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACE,OAAO,CAACZ,IAAI,EAAI,CAAC,cAC1EJ,KAAA,MAAGa,SAAS,CAAC,WAAW,CAAAC,QAAA,eAAChB,IAAA,WAAAgB,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACE,OAAO,CAACX,OAAO,EAAI,CAAC,cACxEP,IAAA,MAAGoB,IAAI,CAAEF,OAAO,CAACV,UAAW,CAACa,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAAAN,QAAA,CAAC,aAAW,CAAG,CAAC,GAL/EG,KAiBL,CACL,CAAC,CACA,CAAC,CAEJT,aAAa,eACZV,IAAA,QAAKe,SAAS,CAAC,UAAU,CAACQ,OAAO,CAAET,aAAc,CAAAE,QAAA,cAC/ChB,IAAA,QAAKwB,GAAG,CAAEd,aAAc,CAACe,GAAG,CAAC,WAAW,CAACV,SAAS,CAAC,gBAAgB,CAAE,CAAC,CACnE,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}